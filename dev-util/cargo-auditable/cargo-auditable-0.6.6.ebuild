# Copyright 2024-2025 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

# Autogenerated by pycargoebuild 0.13.3

EAPI=8

# for test deps, run pycargoebuild over cargo-auditable/tests/fixtures/wasm_crate
CRATES="
	adler2@2.0.0
	aho-corasick@1.1.3
	autocfg@1.4.0
	base64@0.21.7
	binfarce@0.2.1
	bitflags@1.3.2
	bitflags@2.5.0
	bitflags@2.6.0
	bumpalo@3.19.0
	byteorder@0.5.3
	camino@1.1.9
	cargo_metadata@0.18.1
	cargo-platform@0.1.8
	cc@1.2.27
	cfg-if@0.1.10
	cfg-if@0.1.2
	cfg-if@1.0.0
	cfg-if@1.0.1
	console_error_panic_hook@0.1.7
	crc32fast@1.4.2
	cyclonedx-bom-macros@0.1.0
	cyclonedx-bom@0.8.0
	deranged@0.3.11
	dyn-clone@1.0.17
	either@1.13.0
	equivalent@1.0.1
	errno@0.3.9
	fluent-uri@0.1.4
	foldhash@0.1.3
	getrandom@0.2.15
	gg-alloc@1.0.0
	hashbrown@0.15.1
	heck@0.5.0
	hex@0.4.3
	home@0.5.9
	indexmap@2.6.0
	itoa@1.0.13
	js-sys@0.3.77
	leb128@0.2.5
	libc@0.2.164
	libc@0.2.174
	linux-raw-sys@0.4.14
	log@0.4.27
	memchr@2.7.4
	memory_units@0.4.0
	minicov@0.3.7
	miniz_oxide@0.8.0
	num-conv@0.1.0
	num-traits@0.2.19
	object@0.36.5
	once_cell@1.20.2
	once_cell@1.21.3
	ordered-float@4.5.0
	percent-encoding@2.3.1
	pico-args@0.5.0
	powerfmt@0.2.0
	proc-macro2@1.0.92
	proc-macro2@1.0.95
	purl@0.1.3
	quote@1.0.37
	quote@1.0.40
	regex-automata@0.4.9
	regex-syntax@0.8.5
	regex@1.11.1
	rustix@0.38.41
	rustversion@1.0.18
	rustversion@1.0.21
	ryu@1.0.18
	same-file@1.0.6
	schemars_derive@0.8.21
	schemars@0.8.21
	semver@1.0.23
	serde_derive_internals@0.29.1
	serde_derive@1.0.215
	serde_json@1.0.133
	serde@1.0.215
	shlex@1.3.0
	smallvec@1.13.2
	spdx@0.10.7
	spin@0.5.2
	strum_macros@0.26.4
	strum@0.26.3
	syn@2.0.104
	syn@2.0.89
	thiserror-impl@1.0.69
	thiserror@1.0.69
	time-core@0.1.2
	time-macros@0.2.18
	time@0.3.36
	topological-sort@0.2.2
	unicode-ident@1.0.14
	unicode-ident@1.0.18
	uuid@1.11.0
	walkdir@2.5.0
	wasi@0.11.0+wasi-snapshot-preview1
	wasm-bindgen-backend@0.2.100
	wasm-bindgen-futures@0.4.50
	wasm-bindgen-macro-support@0.2.100
	wasm-bindgen-macro@0.2.100
	wasm-bindgen-macro@0.2.84
	wasm-bindgen-shared@0.2.100
	wasm-bindgen-test-macro@0.3.50
	wasm-bindgen-test@0.3.34
	wasm-bindgen-test@0.3.50
	wasm-bindgen@0.2.100
	wasm-bindgen@0.2.84
	wasm-gen@0.1.4
	wasmparser@0.207.0
	web-sys@0.3.77
	wee_alloc@0.4.5
	which@4.4.2
	winapi-i686-pc-windows-gnu@0.4.0
	winapi-util@0.1.9
	winapi-x86_64-pc-windows-gnu@0.4.0
	winapi@0.3.9
	windows_aarch64_gnullvm@0.52.6
	windows_aarch64_msvc@0.52.6
	windows_i686_gnu@0.52.6
	windows_i686_gnullvm@0.52.6
	windows_i686_msvc@0.52.6
	windows_x86_64_gnu@0.52.6
	windows_x86_64_gnullvm@0.52.6
	windows_x86_64_msvc@0.52.6
	windows-sys@0.52.0
	windows-sys@0.59.0
	windows-targets@0.52.6
	xml-rs@0.8.23
"

inherit cargo

DESCRIPTION="Embed audit metadata into Rust binaries"
HOMEPAGE="https://github.com/rust-secure-code/cargo-auditable"
SRC_URI="
	https://github.com/rust-secure-code/cargo-auditable/archive/refs/tags/v${PV}.tar.gz -> ${P}.tar.gz
	${CARGO_CRATE_URIS}
"

LICENSE="|| ( Apache-2.0 MIT )"
# Dependent crate licenses
LICENSE+="
		Apache-2.0 Apache-2.0-with-LLVM-exceptions MIT Unicode-3.0 ZLIB
"
SLOT="0"
KEYWORDS="~amd64 ~arm64"

QA_FLAGS_IGNORED="usr/bin/${PN}"

src_test() {
	# There's no point requiring the wasm32-unknown-unknown target for most users,
	# but if the target is available, we should run the tests that use it.
	if ! ${CARGO} --check wasm32-unknown-unknown 2>/dev/null; then
		${CARGO} test -- --skip test_wasm
	else
		${CARGO} test
	fi
}

src_install() {
	cargo_src_install --path cargo-auditable
}
