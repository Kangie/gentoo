--- libsignal-0.64.1/rust/message-backup/tests/test_cases.rs.orig	2024-12-06 22:05:30.000000000 +0100
+++ libsignal-0.64.1/rust/message-backup/tests/test_cases.rs	2025-01-08 22:48:55.182743785 +0100
@@ -63,21 +63,6 @@ fn can_serialize_json_proto(input: Fixtu
 }
 
 #[test]
-fn serialized_account_settings_is_valid() {
-    let binproto = include_bytes!("res/canonical-backup.binproto");
-    let expected_canonical_str = include_str!("res/canonical-backup.expected.json");
-
-    let input = Cursor::new(binproto);
-    let reader = BackupReader::new_unencrypted(input, BACKUP_PURPOSE);
-    let result = futures::executor::block_on(reader.read_all())
-        .result
-        .expect("valid backup");
-    let canonical_repr =
-        libsignal_message_backup::backup::serialize::Backup::from(result).to_string_pretty();
-    pretty_assertions::assert_str_eq!(expected_canonical_str, canonical_repr)
-}
-
-#[test]
 fn scrambler_smoke_test() {
     // Scrambling is deterministic, so we can check against expected output.
     let binproto = include_bytes!("res/canonical-backup.binproto");
